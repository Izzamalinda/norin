<!DOCTYPE html>
<html lang="id">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reset Password - Norin Cafe</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    body {
      background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
      font-family: 'Inter', system-ui, -apple-system, sans-serif;
    }

    .card {
      background: white;
      border: 1px solid #e2e8f0;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
      transition: all 0.3s ease;
    }

    .form-input {
      background: #f8fafc;
      border: 1.5px solid #e2e8f0;
      transition: all 0.2s ease;
    }

    .form-input:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
      background: white;
    }

    .btn-primary {
      background: linear-gradient(135deg, #667eea, #764ba2);
      transition: all 0.2s ease;
    }

    .btn-primary:hover:not(:disabled) {
      transform: translateY(-1px);
      box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
    }

    .btn-primary:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none;
    }

    .question-display {
      background: linear-gradient(135deg, #f0f4ff, #e0e7ff);
      border-left: 4px solid #667eea;
    }

    .strength-weak {
      background: #ef4444;
      width: 25%;
    }

    .strength-fair {
      background: #f59e0b;
      width: 50%;
    }

    .strength-good {
      background: #10b981;
      width: 75%;
    }

    .strength-strong {
      background: #059669;
      width: 100%;
    }

    .fade-in {
      animation: fadeIn 0.3s ease-out;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .loading-dots::after {
      content: '';
      animation: dots 1.5s steps(4, end) infinite;
    }

    @keyframes dots {

      0%,
      20% {
        content: '';
      }

      40% {
        content: '.';
      }

      60% {
        content: '..';
      }

      80%,
      100% {
        content: '...';
      }
    }
  </style>
</head>

<body class="min-h-screen flex items-center justify-center p-4">

  <div class="w-full max-w-md">
    <!-- Header -->
    <div class="text-center mb-8">
      <div
        class="inline-flex items-center justify-center w-12 h-12 bg-gradient-to-r from-amber-400 to-orange-500 rounded-xl mb-4">
        <i class="fas fa-coffee text-white text-lg"></i>
      </div>
      <h1 class="text-2xl font-bold text-gray-900 mb-1">Reset Password</h1>
      <p class="text-gray-500 text-sm">Norin Cafe Admin</p>
    </div>

    <!-- Form Card -->
    <div class="card rounded-xl p-6">
      <form id="forgotForm" class="space-y-5">

        <!-- Message (muncul di atas form) -->
        <div id="message" class="text-center text-sm hidden mb-4"></div>

        <!-- Username -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Username</label>
          <div class="relative">
            <input type="text" id="username" autocomplete="off" class="form-input w-full px-4 py-3 rounded-lg pl-10"
              placeholder="Masukkan username" required />
            <i class="fas fa-user absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
          </div>
        </div>

        <!-- Security Question -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Pertanyaan Keamanan</label>
          <div class="question-display p-3 rounded-lg">
            <p id="questionText" class="text-sm text-gray-600 italic">
              Masukkan username terlebih dahulu
            </p>
          </div>
        </div>

        <!-- Answer -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Jawaban</label>
          <input type="text" id="answer" class="form-input w-full px-4 py-3 rounded-lg" placeholder="Jawaban keamanan"
            required>
        </div>

        <!-- New Password -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Password Baru</label>
          <div class="relative">
            <input type="password" id="newPassword" autocomplete="new-password"
              class="form-input w-full px-4 py-3 rounded-lg pr-10" placeholder="Password baru" required />

            <button type="button" id="togglePassword"
              class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600">
              <i class="fas fa-eye-slash"></i>
            </button>
          </div>
          <!-- Strength Indicator -->
          <div class="mt-2">
            <div class="h-1 bg-gray-200 rounded-full overflow-hidden">
              <div id="strengthBar" class="h-full transition-all duration-300"></div>
            </div>
            <p class="text-xs text-gray-500 mt-1">Min. 8 karakter, huruf & angka</p>
          </div>
        </div>

        <!-- Submit Button -->
        <button type="submit" id="submitBtn" class="btn-primary w-full text-white py-3 rounded-lg font-medium">
          Reset Password
        </button>

        <!-- Back to Login -->
        <div class="text-center mt-6">
          <a href="/loginAdmin" class="text-sm text-gray-500 hover:text-gray-700 transition-colors">
            <i class="fas fa-arrow-left mr-1"></i> Kembali ke Login
          </a>
        </div>
    </div>

    <script>
      const elements = {
        username: document.getElementById("username"),
        questionText: document.getElementById("questionText"),
        form: document.getElementById("forgotForm"),
        message: document.getElementById("message"),
        submitBtn: document.getElementById("submitBtn"),
        togglePassword: document.getElementById("togglePassword"),
        newPassword: document.getElementById("newPassword"),
        strengthBar: document.getElementById("strengthBar"),
        answer: document.getElementById("answer")
      };

      // Toggle password visibility
      elements.togglePassword.addEventListener("click", () => {
        const isPassword = elements.newPassword.type === "password";
        elements.newPassword.type = isPassword ? "text" : "password";
        elements.togglePassword.innerHTML = `<i class="fas fa-eye${isPassword ? '' : '-slash'}"></i>`;
      });

      // Password strength checker
      elements.newPassword.addEventListener("input", () => {
        const password = elements.newPassword.value;
        const strength = getPasswordStrength(password);

        if (password.length === 0) {
          elements.strengthBar.className = "h-full transition-all duration-300";
          return;
        }

        elements.strengthBar.className = `h-full transition-all duration-300 strength-${strength}`;
      });

      function getPasswordStrength(password) {
        let score = 0;
        if (password.length >= 8) score++;
        if (/[a-z]/.test(password)) score++;
        if (/[A-Z]/.test(password)) score++;
        if (/[0-9]/.test(password)) score++;
        if (/[^A-Za-z0-9]/.test(password)) score++;

        if (score >= 4) return 'strong';
        if (score >= 3) return 'good';
        if (score >= 2) return 'fair';
        return 'weak';
      }

      // Show message
      function showMessage(text, type = 'error') {
        elements.message.textContent = text;
        elements.message.className = `text-center text-sm ${type === 'error' ? 'text-red-500' : 'text-green-500'}`;
        elements.message.classList.remove('hidden');
      }

      // Loading state
      function setLoading(isLoading) {
        elements.submitBtn.disabled = isLoading;
        elements.submitBtn.textContent = isLoading ? 'Memproses...' : 'Reset Password';
      }

      // Fetch security question
      elements.username.addEventListener("blur", async () => {
        const username = elements.username.value.trim();
        if (!username) {
          elements.questionText.textContent = "Masukkan username terlebih dahulu";
          return;
        }

        elements.questionText.innerHTML = '<span class="loading-dots">Mengambil pertanyaan</span>';

        try {
          const res = await fetch(`/getSecurityQuestion?username=${username}`);
          const data = await res.json();

          elements.questionText.textContent = res.ok ? data.securityQuestion : data.error;
          elements.questionText.parentElement.classList.add('fade-in');
        } catch (err) {
          elements.questionText.textContent = "Error mengambil pertanyaan";
        }
      });

      // Form submission
      elements.form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const formData = {
          username: elements.username.value.trim(),
          answer: elements.answer.value.trim(),
          newPassword: elements.newPassword.value
        };

        // Validate password
        if (getPasswordStrength(formData.newPassword) === 'weak') {
          showMessage("Password terlalu lemah", "error");
          return;
        }

        setLoading(true);
        elements.message.classList.add('hidden');

        try {
          const res = await fetch("/forgotpasswordAdmin", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(formData)
          });

          const data = await res.json();

          if (res.ok) {
            showMessage("Password berhasil direset!", "success");
            setTimeout(() => window.location.href = "/loginAdmin", 1500);
          } else {
            console.log("ðŸ”¥ Debug error:", data); // <--- tambahan
            showMessage(data.error || "Terjadi error (400)", "error"); // <--- fallback
          }

        } catch (err) {
          showMessage("Terjadi error, coba lagi!", "error");
        } finally {
          setLoading(false);
        }
      });
    </script>
</body>

</html>