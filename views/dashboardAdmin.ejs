<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <title><%= title %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    .card-hover {
      transition: all 0.3s ease;
    }
    .card-hover:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    }
    .stat-card {
      background: #ffffff;
      border: 1px solid #e5e7eb;
    }
    .chart-container {
      background: #ffffff;
      border: 1px solid #e5e7eb;
    }
    .status-badge {
      @apply px-3 py-1 rounded-full text-xs font-medium;
    }
    .status-pending { @apply bg-yellow-100 text-yellow-800; }
    .status-completed { @apply bg-green-100 text-green-800; }
    .status-cancelled { @apply bg-red-100 text-red-800; }
    .status-processing { @apply bg-blue-100 text-blue-800; }
    
    /* Loading animation */
    .loading {
      background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
      background-size: 200% 100%;
      animation: loading 1.5s infinite;
    }
    
    @keyframes loading {
      0% { background-position: 200% 0; }
      100% { background-position: -200% 0; }
    }

    /* Custom scrollbar */
    .custom-scrollbar::-webkit-scrollbar {
      height: 8px;
    }
    .custom-scrollbar::-webkit-scrollbar-track {
      background: #f1f5f9;
      border-radius: 4px;
    }
    .custom-scrollbar::-webkit-scrollbar-thumb {
      background: #cbd5e1;
      border-radius: 4px;
    }
    .custom-scrollbar::-webkit-scrollbar-thumb:hover {
      background: #94a3b8;
    }

    /* Sidebar layout adjustment - FIXED */
    .main-content {
      margin-left: 256px; /* Adjust based on sidebar width */
    }

    /* Header Fixed Styling - IMPROVED */
    .dashboard-header {
      position: sticky;
      top: 0;
      z-index: 30;
      backdrop-filter: blur(8px);
      -webkit-backdrop-filter: blur(8px);
      transition: box-shadow 0.3s ease, background-color 0.3s ease;
    }
    
    .dashboard-header.scrolled {
      background-color: rgba(255, 255, 255, 0.95);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }

    @media (max-width: 1024px) {
      .main-content {
        margin-left: 0;
      }
    }
  </style>
</head>
<body class="bg-gray-50">
  <!-- Include Sidebar -->
  <%- include('partials/sidebarAdmin') %>

  <!-- Main Content -->
  <div class="main-content min-h-screen">
    <!-- Sticky Header -->
    <header class="dashboard-header bg-white border-b border-gray-200 shadow-sm">
      <div class="px-6 py-6">
        <div class="flex items-center space-x-4">
          <div class="w-10 h-10 bg-orange-500 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
          </div>
          <div>
            <h1 class="text-2xl font-bold text-gray-800">Dashboard Admin</h1>
            <p class="text-gray-600 text-sm">Kelola bisnis Anda dengan mudah</p>
          </div>
        </div>
      </div>
    </header>

    <main class="px-6 py-8">
      <!-- Stats Cards -->
      <section class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <!-- Revenue Card -->
        <div class="stat-card card-hover p-6 rounded-xl shadow-sm">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-500 mb-2">Revenue Hari Ini</p>
              <p id="revenueToday" class="text-2xl font-bold text-gray-900">Rp 0</p>
            </div>
            <div class="w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center">
              <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
              </svg>
            </div>
          </div>
        </div>

        <!-- Total Pesanan Card -->
        <div class="stat-card card-hover p-6 rounded-xl shadow-sm">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-500 mb-2">Total Pesanan</p>
              <p id="totalPesanan" class="text-2xl font-bold text-gray-900">1</p>
            </div>
            <div class="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center">
              <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
              </svg>
            </div>
          </div>
        </div>

        <!-- Menu Aktif Card -->
        <div class="stat-card card-hover p-6 rounded-xl shadow-sm">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-500 mb-2">Menu Aktif</p>
              <p id="menuAktif" class="text-2xl font-bold text-gray-900">3</p>
            </div>
            <div class="w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center">
              <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
              </svg>
            </div>
          </div>
        </div>

        <!-- Meja Terisi -->
        <div class="stat-card card-hover p-6 rounded-xl shadow-sm">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-500 mb-2">Meja Terisi</p>
              <p id="customerAktif" class="text-2xl font-bold text-gray-900">1</p>
            </div>
            <div class="w-12 h-12 bg-orange-100 rounded-xl flex items-center justify-center">
              <svg class="w-6 h-6 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
              </svg>
            </div>
          </div>
        </div>
      </section>

      <!-- Charts Section -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <!-- Grafik Penjualan -->
        <div class="chart-container card-hover p-6 rounded-xl shadow-sm">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-bold text-gray-800">Grafik Penjualan 7 Hari</h2>
            <div class="flex items-center space-x-2">
              <div class="w-3 h-3 bg-blue-500 rounded-full"></div>
              <span class="text-sm text-gray-600">Revenue</span>
            </div>
          </div>
          <div class="relative h-64">
            <canvas id="salesChart"></canvas>
          </div>
        </div>

        <!-- Kategori Terlaris -->
        <div class="chart-container card-hover p-6 rounded-xl shadow-sm">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-bold text-gray-800">Kategori Terlaris</h2>
            <div class="text-sm text-gray-500">30 hari terakhir</div>
          </div>
          <div class="relative h-64">
            <canvas id="categoriesChart"></canvas>
          </div>
        </div>
      </div>

      <!-- Recent Activities -->
      <section class="chart-container card-hover p-6 rounded-xl shadow-sm mb-8">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-xl font-bold text-gray-800">Pesanan Terbaru</h2>
          <button class="text-orange-600 hover:text-orange-800 text-sm font-medium transition-colors">
            Lihat Semua
          </button>
        </div>
        <div class="overflow-x-auto custom-scrollbar">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50 rounded-lg">
              <tr>
                <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  ID Pesanan
                </th>
                <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  Tanggal
                </th>
                <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  Status
                </th>
                <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  Total
                </th>
                <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  Item
                </th>
              </tr>
            </thead>
            <tbody id="recentActivities" class="bg-white divide-y divide-gray-100">
              <!-- Sample data for demo -->
              <tr class="hover:bg-gray-50 transition-colors">
                <td class="px-6 py-4 text-sm font-medium text-gray-900">#001</td>
                <td class="px-6 py-4 text-sm text-gray-600">29/09/2025</td>
                <td class="px-6 py-4 text-sm"><span class="status-badge status-completed">Selesai</span></td>
                <td class="px-6 py-4 text-sm font-semibold text-gray-900">Rp 75.000</td>
                <td class="px-6 py-4 text-sm text-gray-600">Nasi Goreng, Es Teh</td>
              </tr>
              <tr class="hover:bg-gray-50 transition-colors">
                <td class="px-6 py-4 text-sm font-medium text-gray-900">#002</td>
                <td class="px-6 py-4 text-sm text-gray-600">29/09/2025</td>
                <td class="px-6 py-4 text-sm"><span class="status-badge status-processing">Diproses</span></td>
                <td class="px-6 py-4 text-sm font-semibold text-gray-900">Rp 125.000</td>
                <td class="px-6 py-4 text-sm text-gray-600">Ayam Bakar, Jus Alpukat</td>
              </tr>
              <tr class="hover:bg-gray-50 transition-colors">
                <td class="px-6 py-4 text-sm font-medium text-gray-900">#003</td>
                <td class="px-6 py-4 text-sm text-gray-600">28/09/2025</td>
                <td class="px-6 py-4 text-sm"><span class="status-badge status-pending">Pending</span></td>
                <td class="px-6 py-4 text-sm font-semibold text-gray-900">Rp 85.000</td>
                <td class="px-6 py-4 text-sm text-gray-600">Sate Ayam, Es Jeruk</td>
              </tr>
              <tr class="hover:bg-gray-50 transition-colors">
                <td class="px-6 py-4 text-sm font-medium text-gray-900">#004</td>
                <td class="px-6 py-4 text-sm text-gray-600">28/09/2025</td>
                <td class="px-6 py-4 text-sm"><span class="status-badge status-cancelled">Dibatalkan</span></td>
                <td class="px-6 py-4 text-sm font-semibold text-gray-900">Rp 50.000</td>
                <td class="px-6 py-4 text-sm text-gray-600">Mie Ayam</td>
              </tr>
            </tbody>
          </table>
        </div>
      </section>

  <script>
    // Function to format status with appropriate styling
    function formatStatus(status) {
      const statusMap = {
        'pending': '<span class="status-badge status-pending">Pending</span>',
        'processing': '<span class="status-badge status-processing">Diproses</span>',
        'completed': '<span class="status-badge status-completed">Selesai</span>',
        'cancelled': '<span class="status-badge status-cancelled">Dibatalkan</span>'
      };
      return statusMap[status] || `<span class="status-badge status-pending">${status}</span>`;
    }

    // Remove loading animation
    function removeLoading(elementId) {
      const element = document.getElementById(elementId);
      if (element) {
        element.classList.remove('loading');
      }
    }

    // Handle header scroll effect
    function handleHeaderScrollEffect() {
      const header = document.querySelector('.dashboard-header');
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      
      if (scrollTop > 20) {
        header.classList.add('scrolled');
      } else {
        header.classList.remove('scrolled');
      }
    }

    // Fetch functions remain the same as original
    async function fetchSummary() {
      try {
        const res = await fetch('/admin/api/dashboard/summary');
        const json = await res.json();
        if (json.success) {
          document.getElementById('revenueToday').innerText = 'Rp ' + Number(json.data.revenueToday).toLocaleString('id-ID');
          document.getElementById('totalPesanan').innerText = json.data.totalPesanan.toLocaleString('id-ID');
          document.getElementById('menuAktif').innerText = json.data.menuAktif.toLocaleString('id-ID');
          document.getElementById('customerAktif').innerText = json.data.customerAktif.toLocaleString('id-ID');
          
          removeLoading('revenueToday');
          removeLoading('totalPesanan');
          removeLoading('menuAktif');
          removeLoading('customerAktif');
        }
      } catch (error) {
        console.error('Error fetching summary:', error);
      }
    }

    async function fetchSales() {
      try {
        const res = await fetch('/admin/api/dashboard/sales?range=7');
        const json = await res.json();
        if (json.success) {
          const labels = json.data.series.map(s => s.date);
          const values = json.data.series.map(s => s.revenue);
          
          new Chart(document.getElementById('salesChart'), {
            type: 'line',
            data: {
              labels,
              datasets: [{
                label: 'Revenue',
                data: values,
                fill: true,
                backgroundColor: 'rgba(59, 130, 246, 0.1)',
                borderColor: '#3b82f6',
                borderWidth: 3,
                pointBackgroundColor: '#3b82f6',
                pointBorderColor: '#ffffff',
                pointBorderWidth: 2,
                pointRadius: 6,
                tension: 0.4
              }]
            },
            options: { 
              responsive: true, 
              maintainAspectRatio: false,
              plugins: { legend: { display: false } },
              scales: {
                y: { beginAtZero: true, grid: { color: 'rgba(0,0,0,0.05)' } },
                x: { grid: { display: false } }
              }
            }
          });
        } else {
          // Demo fallback
          createDemoChart();
        }
      } catch (error) {
        console.error('Error fetching sales:', error);
        createDemoChart();
      }
    }

    function createDemoChart() {
      new Chart(document.getElementById('salesChart'), {
        type: 'line',
        data: {
          labels: ['24 Sep', '25 Sep', '26 Sep', '27 Sep', '28 Sep', '29 Sep', '30 Sep'],
          datasets: [{
            label: 'Revenue',
            data: [120000, 150000, 180000, 90000, 200000, 175000, 220000],
            fill: true,
            backgroundColor: 'rgba(59, 130, 246, 0.1)',
            borderColor: '#3b82f6',
            borderWidth: 3,
            pointBackgroundColor: '#3b82f6',
            pointBorderColor: '#ffffff',
            pointBorderWidth: 2,
            pointRadius: 6,
            tension: 0.4
          }]
        },
        options: { 
          responsive: true, 
          maintainAspectRatio: false,
          plugins: { legend: { display: false } },
          scales: {
            y: { beginAtZero: true, grid: { color: 'rgba(0,0,0,0.05)' } },
            x: { grid: { display: false } }
          }
        }
      });
    }

    async function fetchTopCategories() {
      try {
        const res = await fetch('/admin/api/dashboard/top-categories?days=30');
        const json = await res.json();
        if (json.success) {
          const labels = json.data.map(c => c.kategori || 'Lainnya');
          const values = json.data.map(c => c.total);
          createCategoriesChart(labels, values);
        } else {
          createDemoCategoriesChart();
        }
      } catch (error) {
        console.error('Error fetching top categories:', error);
        createDemoCategoriesChart();
      }
    }

    function createCategoriesChart(labels, values) {
      new Chart(document.getElementById('categoriesChart'), {
        type: 'doughnut',
        data: {
          labels,
          datasets: [{
            data: values,
            backgroundColor: ['#f87171', '#60a5fa', '#34d399', '#fbbf24', '#a78bfa', '#f472b6'],
            borderWidth: 0
          }]
        },
        options: { 
          responsive: true, 
          maintainAspectRatio: false,
          cutout: '60%',
          plugins: {
            legend: {
              position: 'right',
              labels: { usePointStyle: true, padding: 20 }
            }
          }
        }
      });
    }

    function createDemoCategoriesChart() {
      new Chart(document.getElementById('categoriesChart'), {
        type: 'doughnut',
        data: {
          labels: ['Makanan Utama', 'Minuman', 'Snack', 'Desert'],
          datasets: [{
            data: [45, 25, 20, 10],
            backgroundColor: ['#f87171', '#60a5fa', '#34d399', '#fbbf24'],
            borderWidth: 0
          }]
        },
        options: { 
          responsive: true, 
          maintainAspectRatio: false,
          cutout: '60%',
          plugins: {
            legend: {
              position: 'right',
              labels: { usePointStyle: true, padding: 20 }
            }
          }
        }
      });
    }

    async function fetchRecentActivities() {
      try {
        const res = await fetch('/admin/api/dashboard/recent-activities?limit=6');
        const json = await res.json();
        if (json.success) {
          const tbody = document.getElementById('recentActivities');
          tbody.innerHTML = '';
          json.data.forEach(row => {
            tbody.innerHTML += `
              <tr class="hover:bg-gray-50 transition-colors">
                <td class="px-6 py-4 text-sm font-medium text-gray-900">#${row.id_pesanan}</td>
                <td class="px-6 py-4 text-sm text-gray-600">${row.tanggal}</td>
                <td class="px-6 py-4 text-sm">${formatStatus(row.status)}</td>
                <td class="px-6 py-4 text-sm font-semibold text-gray-900">Rp ${Number(row.total_amount).toLocaleString('id-ID')}</td>
                <td class="px-6 py-4 text-sm text-gray-600">${row.items || '-'}</td>
              </tr>`;
          });
        }
      } catch (error) {
        console.error('Error fetching recent activities:', error);
        // Table already has sample data in HTML
      }
    }

    // Initialize dashboard
    document.addEventListener('DOMContentLoaded', function() {
      // Add scroll event listener for header effect
      window.addEventListener('scroll', handleHeaderScrollEffect);
      
      // Fetch data
      fetchSummary();
      fetchSales();
      fetchTopCategories();
      fetchRecentActivities();
    });
  </script>
</body>
</html>